[{
	"question": "Q1. What is the process of defining a method in a subclass having same name & type signature as a method in its superclass?",
	"answers": {
		"a": "Method overloading",
		"b": "Method overriding",
		"c": " Method hiding",
		"d": "None of the mentioned"
	},
	"correctAnswer": "b"
}, {
	"question": "Q2. Which of these keywords can be used to prevent Method overriding?",
	"answers": {
		"a": " static",
		"b": " constant",
		"c": " protected",
		"d": " final"
	},
	"correctAnswer": "d"
}, {
	"question": "Q3. Which of these is correct way of calling a constructor having no parameters, of superclass A by subclass B?",
	"answers": {
		"a": "super(void);",
		"b": "superclass.();",
		"c": "super.A();",
		"d": " super();"
	},
	"correctAnswer": "d"
}, {
	"question": "Q4. Which of these is supported by method overriding in Java?",
	"answers": {
		"a": "Abstraction",
		"b": "Encapsulation",
		"c": "Polymorphism",
		"d": "None of the mentioned"
	},
	"correctAnswer": "c"
}, {
	"question": "Q5. Run time polymorphism is also known as _____.",
	"answers": {
		"a": "Method Overriding",
		"b": "Method Overloading",
		"c": "Method Rewriting",
		"d": "None of these"
	},
	"correctAnswer": "a"
}]
